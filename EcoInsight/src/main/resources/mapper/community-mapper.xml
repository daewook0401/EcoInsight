<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.semi.ecoinsight.community.model.vo.CommunityMapper">

	<sql id="communityBoardColumn">
		SELECT 
			   BOARD_NO boardNo
			 , MEMBER_NO memberNo
			 , CATEGORY_ID categoryId
			 , CREATED_DATE createdDate
	    	 , BOARD_TITLE boardTitle
	    	 , MEMBER_NAME memberName

	</sql>


	<!--글 쓰기-->
	<insert id="insertCommunityBoard" parameterType="com.semi.ecoinsight.board.model.vo.Board">
		INSERT 
		  INTO
		       TB_COMMUNITY_BOARD
		        (
			     MEMBER_NO 
			   , CATEGORY_ID 
			   , BOARD_TITLE 
			   , BOARD_CONTENT 			
			     )
	    VALUES 
	    	  (
				 #{memberNo}
			   , #{categoryId}
			   , #{boardTitle}	
			   , #{boardContent}
			  )  
	</insert>
	
	<!--게시글 번호 -->
	<select id="getCommunityNo" parameterType="long" resultType="long">
        SELECT
            BOARD_NO AS boardNo
        FROM
            TB_COMMUNITY_BOARD
        WHERE
            MEMBER_NO = #{memberNo}
        ORDER BY
            CREATED_DATE DESC
        FETCH FIRST 1 ROWS ONLY
    </select>
    
	<!--게시글 목록 조회-->
	<select id="findAllCommunity" resultType="com.semi.ecoinsight.board.model.dto.BoardDTO">
		<include refid="communityBoardColumn"/>		
				
			FROM 
				  TB_COMMUNITY_BOARD
			JOIN
			   	  TB_MEMBER USING(MEMBER_NO)
			WHERE
			      IS_DELETED = 'N'
			  AND
			  	  CATEGORY_ID = #{categoryId}	    
			ORDER
			  BY
			  	  BOARD_NO DESC      
	</select>
	
	<!-- 게시글 검색 -->
	<select id="findCommunity" resultType="com.semi.ecoinsight.board.model.dto.BoardDTO">
		<include refid="communityBoardColumn"/>
		FROM 
			 TB_COMMUNITY_BOARD
		JOIN
			 TB_MEMBER USING(MEMBER_NO)	 
	   WHERE
			 IS_DELETED = 'N'
		 AND	 
			 CATEGORY_ID = #{categoryId}	 
		 AND
		 	 BOARD_TITLE LIKE '%'||#{search}||'%'
		 	 
	   ORDER
	      BY
	      	 BOARD_NO DESC
	</select>
	
	
	
	<!--게시글 수정-->
	<update id="updateCommunity" parameterType="com.semi.ecoinsight.board.model.vo.Board">
		UPDATE 
			    TB_COMMUNITY_BOARD
		   SET 
		          BOARD_TITLE = #{boardTitle}
		        , BOARD_CONTENT = #{boardContent}
		        , MODIFIED_DATE = SYSDATE
		 WHERE 
		          BOARD_NO = #{boardNo}
	</update>
	
	<!--게시글 삭제-->
	<update id="deleteCommunity" parameterType="Long">
		UPDATE
	           TB_COMMUNITY_BOARD
	       SET
	           IS_DELETED ='Y'  		
	     WHERE
	       	   BOARD_NO = #{boardNo} 	       
	</update>
	
	<!--조회수 올리기-->
	<update id="insertCommunityCountView" parameterType="Long">
		UPDATE
		        TB_COMMUNITY_BOARD
		   SET
		   	    VIEW_COUNT = VIEW_COUNT + 1
		 WHERE
		 	    BOARD_NO = #{boardNo}
	</update>
	
	<!--좋아요 올리기-->
	<insert id="insertLikeCount" parameterType="map">
		INSERT
		  INTO
		       TB_COMMUNITY_RECOMMEND
		       (
				,BOARD_NO boardNo
				, MEMBER_NO memberNo
			   )
	    VALUES
	          (
				 #{boardNo}
			   , #{memberNo}
			  ) 	   
	</insert>
	
	<!-- 좋아요 취소-->
	<delete id="deleteLikeCount" parameterType="map">
	   DELETE 
	     FROM 
	          TB_COMMUNITY_RECOMMEND
  		WHERE 
  		      BOARD_NO = #{boardNo}
    	  AND 
    	      MEMBER_NO = #{memberNo}
	</delete> 
	
	<!--좋아요 조회-->
	<select id="recommentCount" parameterType="long">
		SELECT 
			   COUNT(*)
		  FROM 
			   TB_COMMUNITY_RECOMMEND 
		 WHERE 
			   BOARD_NO = #{boardNo} 
	</select>
	
	<!--댓글 쓰기-->
	<insert id="insertCommunityComment" parameterType="com.semi.ecoinsight.comment.model.vo.Comment">
		INSERT
		  INTO
		  	   TB_COMMUNITY_COMMENT
		  	   (
			    BOARD_NO
			  , MEMBER_NO
			  , COMMENT_CONTENT
			  , PARENT_COMMENT_NO	
			    )
		VALUES 
	    	 (
			    #{boardNo}
			  , #{memberNo}	
			  , #{commentContent}
			  , #{parentCommentNo}
			 )  	   
	</insert>
	
	<!--댓글 조회-->
	<select id="commentCount" resultType="com.semi.ecoinsight.comment.model.dto.CommentDTO" >
		SELECT
			   COUNT(*)
		  FROM
		  	   TB_COMMUNITY_COMMENT
		 WHERE
		 	   BOARD_NO = #{baordNo}
		   AND
		   	   IS_DELETD = 'N' 	   
	</select>
	
	<!--댓글 수정하기-->
	<update id="updateComment" parameterType="long">
		UPDATE 
			   TB_COMMUNITY_COMMENT
		   SET	   								
			   COMMENT_CONTENT = #{commentContent}
			 , PARENT_COMMENT_NO = #{parentCommentNo}
		     , MODIFIED_DATE = SYSDATE		
		 WHERE
		 	   COMMENT_NO = #{commentNo}
	</update>
	
	<!--댓글 삭제하기-->
	<update id="deleteComment" parameterType="long">
		UPDATE
	           TB_COMMUNITY_COMMENT
	       SET
	           IS_DELETED ='Y'  		
	     WHERE
	       	   COMMENT_NO = #{commentNo}
	</update>
		
</mapper>
